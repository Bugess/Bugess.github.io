<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>将Hexo博客部署到服务器</title>
      <link href="/2020/03/27/%E5%B0%86Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2020/03/27/%E5%B0%86Hexo%E5%8D%9A%E5%AE%A2%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="1-服务器配置"><a href="#1-服务器配置" class="headerlink" title="1 服务器配置"></a>1 服务器配置</h2><p>服务器是 centOS 7.3 （或者直接重置阿里服务器系统为宝塔面板，系统也为CentOS 7.3）</p><p>点击”远程连接”</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/1.png" alt=""></p><a id="more"></a><p>输入以下命令，切换到root账号</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo su root</span><br></pre></td></tr></table></figure><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/2.png" alt=""></p><h3 id="1-1-git配置"><a href="#1-1-git配置" class="headerlink" title="1.1 git配置"></a>1.1 git配置</h3><h4 id="1、安装git在刚刚的黑框里输入："><a href="#1、安装git在刚刚的黑框里输入：" class="headerlink" title="1、安装git在刚刚的黑框里输入："></a>1、安装git在刚刚的黑框里输入：</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install git</span><br></pre></td></tr></table></figure><p>然后回车，等待一下就安装好了。中途会出现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Is this ok [y/d/N]:</span><br></pre></td></tr></table></figure><p>输入 ： y 回车即可</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/3.png" alt=""></p><p>此时git已经安装成功。</p><h4 id="2、创建git账户在命令框输入"><a href="#2、创建git账户在命令框输入" class="headerlink" title="2、创建git账户在命令框输入"></a>2、创建git账户在命令框输入</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure><h4 id="3、添加git账户权限"><a href="#3、添加git账户权限" class="headerlink" title="3、添加git账户权限"></a>3、添加git账户权限</h4><ol><li><pre><code class="shell">chmod 740 /etc/sudoersvim /etc/sudoers<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![](https:&#x2F;&#x2F;bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com&#x2F;images&#x2F;%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8&#x2F;4.png)</span><br><span class="line"></span><br><span class="line">输入上面的命令，回车之后，进入编辑界面。</span><br><span class="line"></span><br><span class="line">![](https:&#x2F;&#x2F;bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com&#x2F;images&#x2F;%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8&#x2F;5.png)</span><br><span class="line"></span><br><span class="line">这里要先点击 “i” 键，进入编辑模式，然后找到一下内容的地方：</span><br><span class="line"></span><br><span class="line">1. &#96;&#96;&#96;shell</span><br><span class="line">   Allow root to run any commands anywhere</span><br><span class="line">   root ALL&#x3D;(ALL) ALL</span><br></pre></td></tr></table></figure></code></pre></li></ol><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/6.png" alt=""></p><p>添加以下内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git ALL=(ALL) ALL</span><br></pre></td></tr></table></figure><p>然后按 “Esc” 键，此时最底下的—INSERT—消失，再输入 “:wq”，即保存退出。</p><h4 id="4、改回权限"><a href="#4、改回权限" class="headerlink" title="4、改回权限"></a>4、改回权限</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 400 /etc/sudoers</span><br></pre></td></tr></table></figure><h4 id="5、设置git账户密码"><a href="#5、设置git账户密码" class="headerlink" title="5、设置git账户密码"></a>5、设置git账户密码</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd git</span><br></pre></td></tr></table></figure><p>输入两次密码就设置成功了。注意，linux下输入密码是不显示****的，你直接输入，输完回车就行了。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/7.png" alt=""></p><h3 id="1-2-创建仓库目录及相关配置"><a href="#1-2-创建仓库目录及相关配置" class="headerlink" title="1.2 创建仓库目录及相关配置"></a>1.2 创建仓库目录及相关配置</h3><p>1、创建目录在var目录下创建repo作为Git仓库目录，返回服务端命令行切换到root账户，然后输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /var/repo</span><br></pre></td></tr></table></figure><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/8.png" alt=""></p><p>赋予权限：</p><ol><li><pre><code class="shell">chown -R git:git /var/repochmod -R 755 /var/repo<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">接下来创建hexo目录作为网站根目录，并赋予权限：</span><br><span class="line"></span><br><span class="line">1. &#96;&#96;&#96;shell</span><br><span class="line">   mkdir &#x2F;var&#x2F;hexo</span><br><span class="line">   chown -R git:git &#x2F;var&#x2F;hexo</span><br><span class="line">   chmod -R 755 &#x2F;var&#x2F;hexo</span><br></pre></td></tr></table></figure></code></pre></li></ol><p>接下来创建一个空白的git仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /var/repo</span><br><span class="line">git init --bare hexo.git</span><br></pre></td></tr></table></figure><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/9.png" alt=""></p><p>创建一个新的 Git 钩子，用于自动部署.在 /var/repo/hexo.git 下，有一个自动生成的 hooks 文件夹。我们需要在里边新建一个新的钩子文件 post-receive。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /var/repo/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>进入编辑模式，然后将下面那两行代码粘贴进去，保存退出。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">git --work-tree=/var/hexo --git-dir=/var/repo/hexo.git checkout -f</span><br></pre></td></tr></table></figure><p>修改权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git /var/repo/hexo.git/hooks/post-receive</span><br><span class="line">chmod +x /var/repo/hexo.git/hooks/post-receive</span><br></pre></td></tr></table></figure><h2 id="2-免密远程连接服务器（在本地端）"><a href="#2-免密远程连接服务器（在本地端）" class="headerlink" title="2 免密远程连接服务器（在本地端）"></a>2 免密远程连接服务器（在本地端）</h2><p><strong>免密远程连接服务器</strong>任意处打开Git Bash：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i C:/Users/你的用户名/.ssh/id_rsa.pub git@服务器IP</span><br><span class="line">例如：ssh-copy-id -i C:/Users/ASUS/.ssh/id_rsa.pub</span><br><span class="line">git@37.63.228.168ssh git@你的服务器ip #测试能否成功免密远程连接</span><br></pre></td></tr></table></figure><p><em>此时远程连接应该不需要密码！！！</em></p><p><strong>如果仍需要密码，请仔细检查步骤</strong></p><p>如果有报错，请把错误提示放到<strong>Google</strong>上搜索解决方案*</p><p>到这里Git仓库已经搭建完毕了。</p><h2 id="3-配置Nginx（宝塔面板内）"><a href="#3-配置Nginx（宝塔面板内）" class="headerlink" title="3 配置Nginx（宝塔面板内）"></a>3 配置Nginx（宝塔面板内）</h2><h3 id="3-1-配置Nginx"><a href="#3-1-配置Nginx" class="headerlink" title="3.1 配置Nginx"></a>3.1 配置Nginx</h3><p>为了部署和维护，我们使用宝塔面板来一键部署Nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; bash install.sh</span><br></pre></td></tr></table></figure><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/10.png" alt=""></p><p>（或者将系统重置为宝塔面板）</p><p>复制这个地址打开，输入账号密码即可进入宝塔面板。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/11.png" alt=""></p><p>注意：这里也有可能你进不去面板页面，是因为你的服务器没有开8888这个端口（具体看你的宝塔面板连接的端口），去阿里云轻量服务器控制台中的“安全”-&gt;“防火墙”，右上角的”添加规则”，添加相应的端口即可。看下面的第二张图。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/13.png" alt=""></p><p>另外如果忘记了宝塔用户名密码，可以去你服务器终端输入：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/14.png" alt=""></p><p>进入面板之后，会提示叫你修改端口，点击”立即修改”,可以看到”面板端口”这时候是8888，自己选一个值，然后先去服务器防火墙上开放这个端口，跟刚刚的”添加规则”操作一样。再回到宝塔面板页面将”面板端口”的值修改成你刚刚开放的端口值。然后需要用新端口，重新进入宝塔面板，就是将原有的链接”:”后面的值改成你的端口即可。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/15.png" alt=""></p><p>在宝塔面板，进入软件商店，输入”Nginx”，然后搜索，安装免费的那个。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/16.png" alt=""></p><p>等待部署完成。部署完成之后，点击网站，添加站点，填写你的域名，没有的话写你的服务器ip地址。其他的不要改。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/17.png" alt=""></p><p>填写完之后提交，然后点击”设置”</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/18.png" alt=""></p><p>点击”配置文件”</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">server</span><br><span class="line">&#123;</span><br><span class="line">listen 80;</span><br><span class="line"><span class="meta">#</span><span class="bash"> server_name填写你自己的域名，没有的话填ip</span></span><br><span class="line">server_name hjxlog.com;</span><br><span class="line">index index.php index.html index.htm default.php default.htm default.html;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 这里root填写自己的网站根目录，修改为/var/hexo</span></span><br><span class="line">root /var/hexo;</span><br></pre></td></tr></table></figure><p>保存，然后选择“设置”-“网站目录”，将网站目录修改成以下，保存。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/var/hexo</span><br></pre></td></tr></table></figure><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/19.png" alt=""></p><p>回到服务器终端，重启宝塔服务，使之生效。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service bt restart</span><br></pre></td></tr></table></figure><h2 id="4-修改hexo配置（本地hexo目录）"><a href="#4-修改hexo配置（本地hexo目录）" class="headerlink" title="4  修改hexo配置（本地hexo目录）"></a>4  修改hexo配置（本地hexo目录）</h2><h3 id="4-1-修改hexo配置"><a href="#4-1-修改hexo配置" class="headerlink" title="4.1 修改hexo配置"></a>4.1 修改hexo配置</h3><p>进入本地电脑hexo博客的根目录，编辑<strong>站点配置文件 _config.yml</strong>，找到deploy，修改成以下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line"><span class="meta">#</span><span class="bash">repo改为repo: git@你的域名:/var/repo/hexo.git</span></span><br><span class="line">repo: git@hjxlog.com:/var/repo/hexo.git</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure><p>最后在本地电脑hexo博客的根目录右击，Git Bash Here，输入以下命令部署</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure><p>这时候可能出现权限问题，导致部署到git失败。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/20.png" alt=""></p><p>在服务器终端输入以下命令即可：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git /var/repo/</span><br><span class="line">chown -R git:git /var/hexo/</span><br></pre></td></tr></table></figure><p>最后再hexo d -g部署，应该就可以看到部署成功了</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/21.png" alt=""></p><p>自此，已经将博客从GitHub pages搬到阿里云服务器了。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/22.png" alt=""></p><h2 id="5-将网站添加https访问（宝塔面板）"><a href="#5-将网站添加https访问（宝塔面板）" class="headerlink" title="5 将网站添加https访问（宝塔面板）"></a>5 将网站添加https访问（宝塔面板）</h2><p>去阿里云申请一个免费的SSL证书，好像要备案，有点忘记了，很快就申请下来了。</p><p>进入宝塔面板，”网站”，”设置”，”SSL，”其他证书”</p><p>也可以点亮强制HTTPS按钮</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/23.png" alt=""></p><p>将你申请的证书<em>.key以及</em>.pem内容，粘贴进去然后保存即可。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/24.png" alt=""></p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B0%86Hexo%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/25.png" alt=""></p><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6 总结"></a>6 总结</h2><p>在部署网站的时候，由于之前对Linux没有经验，网络上看到几篇博客，还是没能部署成功，有些博客比如命令中的单词拼写错误，或者前后不衔接，导致部署一直有问题。</p><p>还好在部署的同时去网上学一些Linux基本命令，学到了进入编辑模式，编辑完怎么退出等等。之前看了一篇博客，可能作者默认大家都会了，结果我卡在这里了一下。</p><p>总的来说，部署还是比较简单的，第一次没成功的同学不要轻易放弃，多去网上找找答案，努力解决问题，加油！如果因为看我的博客，在部署过程当中出现任何问题，请私信我或者邮箱联系我，帮助大家一起解决问题。</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 博客部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis（一）</title>
      <link href="/2020/02/21/Mybatis%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/02/21/Mybatis%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>Mybatis:<br>    实体类<br>    mapper接口<br>    mapper.xml配置文件<br>    applicationContext.xml<br>        配置连接数据库的驱动，URL，账号和密码<br>        扫描xml配置文件<br>        扫描mapper类</p><p>​    测试类</p><a id="more"></a><h3 id="从-XML-中构建-SqlSessionFactory"><a href="#从-XML-中构建-SqlSessionFactory" class="headerlink" title="从 XML 中构建 SqlSessionFactory"></a>从 XML 中构建 SqlSessionFactory</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE configuration</span><br><span class="line">  PUBLIC <span class="string">"-//mybatis.org//DTD Config 3.0//EN"</span></span><br><span class="line">  <span class="string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span><br><span class="line">&lt;configuration&gt;</span><br><span class="line">  &lt;environments <span class="keyword">default</span>=<span class="string">"development"</span>&gt;</span><br><span class="line">    &lt;environment id=<span class="string">"development"</span>&gt;</span><br><span class="line">      &lt;transactionManager type=<span class="string">"JDBC"</span>/&gt;</span><br><span class="line">      &lt;dataSource type=<span class="string">"POOLED"</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">"driver"</span> value=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">"url"</span> value=<span class="string">"$&#123;url&#125;"</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">"username"</span> value=<span class="string">"$&#123;username&#125;"</span>/&gt;</span><br><span class="line">        &lt;property name=<span class="string">"password"</span> value=<span class="string">"$&#123;password&#125;"</span>/&gt;</span><br><span class="line">      &lt;/dataSource&gt;</span><br><span class="line">    &lt;/environment&gt;</span><br><span class="line">  &lt;/environments&gt;</span><br><span class="line">  &lt;mappers&gt;</span><br><span class="line">    &lt;mapper resource=<span class="string">"org/mybatis/example/BlogMapper.xml"</span>/&gt;</span><br><span class="line">  &lt;/mappers&gt;</span><br><span class="line">&lt;/configuration&gt;</span><br></pre></td></tr></table></figure><p>对 MyBatis 系统的核心设置，获取数据库连接实例的数据源（DataSource）和决定事务作用域和控制方式的事务管理器（TransactionManager）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">String resource = <span class="string">"org/mybatis/example/mybatis-config.xml"</span>;</span><br><span class="line">InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span>  SqlSessionFactoryBuilder().build(inputStream);</span><br></pre></td></tr></table></figure><p>每个基于 MyBatis 的应用都是以一个 SqlSessionFactory 的实例为核心的。SqlSessionFactory 的实例可以通过 SqlSessionFactoryBuilder        获得。而 SqlSessionFactoryBuilder 则可以从 XML 配置文件或一个预先定制的        Configuration 的实例构建出 SqlSessionFactory 的实例。</p><p>可以使用任意的输入流（InputStream）实例，MyBatis 包含一个名叫 Resources        的工具类。</p><h3 id="从-SqlSessionFactory-中获取-SqlSession"><a href="#从-SqlSessionFactory-中获取-SqlSession" class="headerlink" title="从 SqlSessionFactory 中获取 SqlSession"></a>从 SqlSessionFactory 中获取 SqlSession</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (SqlSession session = sqlSessionFactory.openSession()) &#123;</span><br><span class="line">  Blog blog = (Blog) session.selectOne(<span class="string">"org.mybatis.example.BlogMapper.selectBlog"</span>, <span class="number">101</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更简洁的方式——使用正确描述每个语句的参数和返回值的接口（比如        BlogMapper.class）</p><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span> (SqlSession session = sqlSessionFactory.openSession()) &#123;</span><br><span class="line">  BlogMapper mapper = session.getMapper(BlogMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  Blog blog = mapper.selectBlog(<span class="number">101</span>);</span><br><span class="line">&#125;<span class="comment">//不依赖于字符串字面值，更安全</span></span><br></pre></td></tr></table></figure><h3 id="已映射的-SQL-语句"><a href="#已映射的-SQL-语句" class="headerlink" title="已映射的 SQL 语句"></a>已映射的 SQL 语句</h3><p>一个语句既可以通过 XML 定义，也可以通过注解定义。</p><p>通过xml方式定义语句：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">  PUBLIC <span class="string">"-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line">  <span class="string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">"org.mybatis.example.BlogMapper"</span>&gt;</span><br><span class="line">  &lt;select id=<span class="string">"selectBlog"</span> resultType=<span class="string">"Blog"</span>&gt;</span><br><span class="line">    select * from Blog where id = #&#123;id&#125;</span><br><span class="line">  &lt;/select&gt;</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><p>使用 Java 注解来配置：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.mybatis.example;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">BlogMapper</span> </span>&#123;</span><br><span class="line">  <span class="meta">@Select</span>(<span class="string">"SELECT * FROM blog WHERE id = #&#123;id&#125;"</span>)</span><br><span class="line">  <span class="function">Blog <span class="title">selectBlog</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="命名空间（namespaces）"><a href="#命名空间（namespaces）" class="headerlink" title="命名空间（namespaces）"></a>命名空间（namespaces）</h3><p>作用：一个是利用更长的<strong>完全限定名</strong>（比如 “com.mypackage.MyMapper.selectAllThings）来将不同的语句隔离开来，同时也实现了你上面见到的<strong>接口绑定</strong>。</p><h3 id="作用域（Scope）和生命周期（重要）"><a href="#作用域（Scope）和生命周期（重要）" class="headerlink" title="作用域（Scope）和生命周期（重要）"></a>作用域（Scope）和生命周期（重要）</h3><h4 id="SqlSessionFactoryBuilder"><a href="#SqlSessionFactoryBuilder" class="headerlink" title="SqlSessionFactoryBuilder"></a>SqlSessionFactoryBuilder</h4><p>这个类可以被实例化、使用和丢弃，一旦创建了 SqlSessionFactory，就不再需要它了。因此 SqlSessionFactoryBuilder 实例的最佳作用域是方法作用域（也就是局部方法变量）。 你可以重用 SqlSessionFactoryBuilder 来创建多个 SqlSessionFactory 实例，但是最好还是不要让其一直存在，以保证所有的 XML 解析资源可以被释放给更重要的事情。        </p><h4 id="SqlSessionFactory"><a href="#SqlSessionFactory" class="headerlink" title="SqlSessionFactory"></a>SqlSessionFactory</h4><p>SqlSessionFactory 一旦被创建就应该在应用的运行期间一直存在，没有任何理由丢弃它或重新创建另一个实例。          使用 SqlSessionFactory 的最佳实践是在应用运行期间不要重复创建多次，多次重建 SqlSessionFactory 被视为一种代码“坏味道（bad smell）”。因此 SqlSessionFactory 的最佳作用域是应用作用域。 有很多方法可以做到，最简单的就是使用单例模式或者静态单例模式。        </p><h4 id="SqlSession"><a href="#SqlSession" class="headerlink" title="SqlSession"></a>SqlSession</h4><p>每个线程都应该有它自己的 SqlSession 实例。SqlSession  的实例不是线程安全的，因此是不能被共享的，所以它的最佳的作用域是请求或方法作用域。绝对不能将 SqlSession 实例的引用放在一个类的静态域，甚至一个类的实例变量也不行。 也绝不能将 SqlSession 实例的引用放在任何类型的托管作用域中，比如 Servlet 框架中的 HttpSession。 如果你现在正在使用一种 Web 框架，要考虑 SqlSession 放在一个和 HTTP 请求对象相似的作用域中。 换句话说，每次收到的 HTTP 请求，就可以打开一个 SqlSession，返回一个响应，就关闭它。这个关闭操作是很重要的，你应该把这个关闭操作放到 finally 块中以确保每次都能执行关闭。下面的示例就是一个确保 SqlSession 关闭的标准模式：        </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">try (SqlSession session &#x3D; sqlSessionFactory.openSession()) &#123;</span><br><span class="line">  &#x2F;&#x2F; 你的应用逻辑代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在你的所有的代码中一致地使用这种模式来保证所有数据库资源都能被正确地关闭。</p><h3 id="通过项目了解Mybatis（一）"><a href="#通过项目了解Mybatis（一）" class="headerlink" title="通过项目了解Mybatis（一）"></a>通过项目了解Mybatis（一）</h3><p>官方中文地址：<a href="http://www.mybatis.org/mybatis-3/zh/" target="_blank" rel="noopener">http://www.mybatis.org/mybatis-3/zh/</a></p><h4 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h4><p>jdbc开发：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JdbcTest</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        <span class="comment">//数据库连接</span></span><br><span class="line">        Connection connection = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//预编译的Statement，使用预编译的Statement可以提高数据库性能</span></span><br><span class="line">        PreparedStatement preparedStatement = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//结果集</span></span><br><span class="line">        ResultSet resultSet = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="comment">//加载数据库驱动</span></span><br><span class="line">            Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//通过驱动管理类获取数据库链接</span></span><br><span class="line">            connection =  DriverManager.getConnection(<span class="string">"jdbc:mysql://localhost:3306/student?characterEncoding=utf-8"</span>, <span class="string">"root"</span>, <span class="string">"admin"</span>);</span><br><span class="line">            <span class="comment">//定义sql语句 ?表示占位符（在这里表示username）</span></span><br><span class="line">            String sql = <span class="string">"select * from student where sno = ?"</span>;</span><br><span class="line">            <span class="comment">//获取预处理statement</span></span><br><span class="line">            preparedStatement = connection.prepareStatement(sql);</span><br><span class="line">            <span class="comment">//设置参数，第一个参数为sql语句中参数的序号（从1开始），第二个参数为设置的参数值</span></span><br><span class="line">            preparedStatement.setString(<span class="number">1</span>, <span class="string">"zs"</span>);</span><br><span class="line">            <span class="comment">//向数据库发出sql执行查询，查询出结果集</span></span><br><span class="line">            resultSet =  preparedStatement.executeQuery();</span><br><span class="line">            <span class="comment">//遍历查询结果集</span></span><br><span class="line">            <span class="keyword">while</span>(resultSet.next())&#123;</span><br><span class="line">                System.out.println(resultSet.getString(<span class="string">"sno"</span>)+<span class="string">"  "</span>+resultSet.getString(<span class="string">"sname"</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">//释放资源</span></span><br><span class="line">            <span class="keyword">if</span> (resultSet!=<span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    resultSet.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(preparedStatement!=<span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    preparedStatement.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(connection!=<span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    connection.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="mybatis相比较jdbc有什么优点"><a href="#mybatis相比较jdbc有什么优点" class="headerlink" title="mybatis相比较jdbc有什么优点"></a>mybatis相比较jdbc有什么优点</h5><ol><li><p>数据库连接池（减少数据库关闭开启时数据库的资源浪费）</p></li><li><p>SQL配置文件（减少硬编码）</p><p>JDBC将SQL语句写到代码里，属于硬编码，非常不易维护，MyBatis可以将SQL代码写入xml中。</p></li><li><p>动态SQL语句（只专注写sql，各干各的事，专一）</p></li><li><p>映射（resultset直接转为java对象）</p><p>JDBC需要先注册驱动和数据库信息、操作Connection、通过statement对象执行SQL，将结果返回给resultSet，JDBC的resultSet需要用户自己去读取并生成对应的POJO，MyBatis的mapper会自动将执行后的结果映射到对应的Java对象中。    </p></li></ol><h4 id="Mybatis框架（重要）"><a href="#Mybatis框架（重要）" class="headerlink" title="Mybatis框架（重要）"></a>Mybatis框架（重要）</h4><ol><li><p>是什么？</p></li><li><p>框架</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/Mybatis%E6%A1%86%E6%9E%B6.jpg" alt=""></p></li></ol><h4 id="入门程序"><a href="#入门程序" class="headerlink" title="入门程序"></a>入门程序</h4><ol><li><p>需求</p><p>功能：根据id查询信息，实现增、删、改、查操作</p></li><li><p>环境</p><p>java 环境 ：jdk-9.0.4</p><p>开发工具 ： IDEA 2019.3</p><p>数据库 ： MySQL 5.7</p><p>Mybatis 运行环境（ jar 包）</p><p>​    mybatis-3.4.6.jar</p><p>​    MySQL 驱动包：mysql-connector-java-5.1.38.jar</p></li><li><p>工程结构</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/%E5%B7%A5%E7%A8%8B%E7%BB%93%E6%9E%841.png" alt=""></p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/%E5%B7%A5%E7%A8%8B%E7%BB%93%E6%9E%842.png" alt=""></p></li><li><p>entity类</p><p>属性 – 数据库表的字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zp.mybatis.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zp.mybatis.entity.Address;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">int</span> sno;<span class="comment">//编号</span></span><br><span class="line">    <span class="keyword">private</span>  String sname;<span class="comment">//姓名</span></span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">int</span> sage;<span class="comment">//年龄</span></span><br><span class="line">    <span class="keyword">private</span> Address saddress;<span class="comment">//地址，级联属性</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//getter and setter</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSno</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sno;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSno</span><span class="params">(<span class="keyword">int</span> sno)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sno = sno;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSname</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSname</span><span class="params">(String sname)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sname = sname;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> sage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSage</span><span class="params">(<span class="keyword">int</span> sage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.sage = sage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Address <span class="title">getSaddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> saddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSaddress</span><span class="params">(Address saddress)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.saddress = saddress;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Student&#123;"</span> +</span><br><span class="line">                <span class="string">"sno="</span> + sno +</span><br><span class="line">                <span class="string">", sname='"</span> + sname + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", sage="</span> + sage +</span><br><span class="line">                <span class="string">", saddress="</span> + saddress +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>mapper类（接口）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zp.mybatis.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.zp.mybatis.entity.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StudentMapper</span> </span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 1.方法名和 mapper.xml文件中标签的 id 值相同</span></span><br><span class="line"><span class="comment">     * 2.方法的 输入参数和 mapper.xml 文件中标签的 parameterType 类型一致</span></span><br><span class="line"><span class="comment">     * 3.方法的返回值和 mapper.xml 文件中标签的 resultType 类型一致</span></span><br><span class="line"><span class="comment">     * 4.无返回值时使用 void 接收</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="function">Student <span class="title">queryStudentByNo</span><span class="params">(<span class="keyword">int</span> sno)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>mapper.xml文件</p><p>映射文件：</p><ol><li>命名规则 xxxmapper.xml</li><li>其中写SQL</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.zp.mybatis.mapper.StudentMapper"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment"> 1. #&#123;值&#125; 8个基本类型 + String 时任意值；对象类型为属性名</span></span><br><span class="line"><span class="comment">自动为 String 类型加上  '  ' </span></span><br><span class="line"><span class="comment">防止 sql 注入</span></span><br><span class="line"><span class="comment">2. $&#123;value&#125; 8个基本类型 + String 时，必须为 value；对象类型时为属性名</span></span><br><span class="line"><span class="comment">原样输出</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"queryStudentByNo"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"student"</span>&gt;</span></span><br><span class="line">        select * from student where sno = #&#123;sno&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>db.properties</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 数据库配置 utf-8 不需要加 " "</span></span><br><span class="line"><span class="attr">driver</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br><span class="line"><span class="attr">url</span>=<span class="string">jdbc:mysql://localhost:3306/student?characterEncoding=UTF-8</span></span><br><span class="line"><span class="attr">username</span>=<span class="string">root</span></span><br><span class="line"><span class="attr">password</span>=<span class="string">admin</span></span><br></pre></td></tr></table></figure></li><li><p>applicationContext.xml</p><p>配置数据库连接池、别名定义、db.properties文件加载、mapper.xml文件加载</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8" ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//mybatis.org//DTD Config 3.0//EN"</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">"http://mybatis.org/dtd/mybatis-3-config.dtd"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 指定db.properties文件 必须放在第一位--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span> <span class="attr">resource</span>=<span class="string">"db.properties"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 别名 指定一个包名，MyBatis 会在包名下面搜索需要的 Java Bean --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">"com.zp.mybatis.entity"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">"development"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 使用jdbc事务管理,事务由 Mybatis 控制--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">"JDBC"</span>/&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 数据库连接池,由Mybatis管理 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">"POOLED"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driver"</span> <span class="attr">value</span>=<span class="string">"$&#123;driver&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"$&#123;url&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"$&#123;username&#125;"</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;password&#125;"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- mapper文件包含了 SQL 代码 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">"com/zp/mybatis/mapper/StudentMapper.xml"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>Test类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.zp.mybatis.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sun.javafx.tools.resource.PackagerResource;</span><br><span class="line"><span class="keyword">import</span> com.zp.mybatis.entity.Student;</span><br><span class="line"><span class="keyword">import</span> com.zp.mybatis.mapper.StudentMapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBatisTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        queryStudentByNo();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">queryStudentByNo</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">//Mybatis 配置文件</span></span><br><span class="line">        String resource = <span class="string">"applicationContext.xml"</span>;</span><br><span class="line">        <span class="comment">//得到配置文件流</span></span><br><span class="line">        InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        <span class="comment">//创建会话工厂，传入 Mybatis 配置文件信息</span></span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        <span class="comment">//通过工厂得到 SqlSession</span></span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        <span class="comment">//获取 mapper 接口类</span></span><br><span class="line">        StudentMapper mapper = sqlSession.getMapper(StudentMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        <span class="comment">//调用 mapper 接口的方法</span></span><br><span class="line">        Student student = mapper.queryStudentByNo(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(student);</span><br><span class="line">        sqlSession.close();<span class="comment">//释放资源</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/%E6%B5%8B%E8%AF%95%E7%BB%93%E6%9E%9C.png" alt=""></p></li></ol><ol start="10"><li><p>根据用户名模糊查询</p><p>mapper.xml中加入：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 自定义条件查询 </span></span><br><span class="line"><span class="comment">#&#123;&#125;          会自动加上‘’，所以传值时 %值%</span></span><br><span class="line"><span class="comment">$&#123;value&#125; -- '%$&#123;value&#125;%'  会引起sql注入</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUserBySname"</span> <span class="attr">parameterType</span>=<span class="string">"String"</span> <span class="attr">resultType</span>=<span class="string">"student"</span>&gt;</span></span><br><span class="line">    select * from student where sname like #&#123;sname&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>mapper接口中加入：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据 sname 模糊查询学生</span></span><br><span class="line"><span class="function">List&lt;Student&gt; <span class="title">findUserBySname</span><span class="params">(Student student)</span></span>;</span><br></pre></td></tr></table></figure><p>测试 findUserBySname：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">findUserBySname</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    String resource = <span class="string">"applicationContext.xml"</span>;</span><br><span class="line">    InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">    SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">    SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">    StudentMapper mapper = sqlSession.getMapper(StudentMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">  </span><br><span class="line">    Student student = <span class="keyword">new</span> Student();</span><br><span class="line">    <span class="comment">//因使用 #&#123;&#125;，所以直接在传值时加入 %%</span></span><br><span class="line">    student.setSname(<span class="string">"%2%"</span>);</span><br><span class="line">    List&lt;Student&gt; students = mapper.findUserBySname(student);</span><br><span class="line"></span><br><span class="line">    System.out.println(students);</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/%E6%B5%8B%E8%AF%95findUserBySname.png" alt=""></p><p>注意：</p><p>​    由上可知，其中一部分代码是重复的，显得程序很冗余，所以可以将其封装为一个函数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SqlSessionFactory <span class="title">createSqlSessionFactory</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    String resource = <span class="string">"applicationContext.xml"</span>;</span><br><span class="line">    InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">    SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">    <span class="keyword">return</span> sqlSessionFactory;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="11"><li><p>增加用户</p><p>mapper接口添加：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加用户</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addStudent</span><span class="params">(Student student)</span></span>;</span><br></pre></td></tr></table></figure><p>mapper.xml文件添加：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;insert id=<span class="string">"addStudent"</span> parameterType=<span class="string">"Student"</span> &gt;</span><br><span class="line">    <span class="function">insert into <span class="title">student</span><span class="params">(sname, sage)</span></span></span><br><span class="line"><span class="function">    <span class="title">values</span><span class="params">(#&#123;sname&#125;, #&#123;sage&#125;)</span></span></span><br><span class="line"><span class="function">&lt;/insert&gt;</span></span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addStudent</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//Student 类的构造方法</span></span><br><span class="line">    Student student = <span class="keyword">new</span> Student(<span class="string">"ls"</span>, <span class="number">18</span>);</span><br><span class="line">    <span class="comment">//createSqlSessionFactory 方法返回一个 SqlSessionFactory</span></span><br><span class="line">    SqlSession sqlSession = createSqlSessionFactory().openSession();</span><br><span class="line">    </span><br><span class="line">    StudentMapper mapper = sqlSession.getMapper(StudentMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    mapper.addStudent(student);</span><br><span class="line">    <span class="comment">//提交事务</span></span><br><span class="line">    sqlSession.commit();</span><br><span class="line">    System.out.println(<span class="string">"增加学生"</span>);</span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/%E5%A2%9E%E5%8A%A0%E5%AD%A6%E7%94%9F%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BB%93%E6%9E%9C.png" alt=""></p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/%E5%A2%9E%E5%8A%A0%E5%AD%A6%E7%94%9F%E7%BB%93%E6%9E%9C.png" alt=""></p><p>注意：不要忘记 Student 类的构造方法</p></li><li><p>更新信息</p><p>接口类添加：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">updateStudent</span><span class="params">(Student student)</span></span>;</span><br></pre></td></tr></table></figure><p>mapper.xml文件添加：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateStudent"</span> <span class="attr">parameterType</span>=<span class="string">"Student"</span> &gt;</span></span><br><span class="line">    update student set sname = #&#123;sname&#125;, sage = #&#123;sage&#125; where sno = #&#123;sno&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新信息</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">updateStudent</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">//根据构造方法更新学生信息</span></span><br><span class="line">    Student student = <span class="keyword">new</span> Student(<span class="number">12</span>, <span class="string">"ww"</span>, <span class="number">55</span>);</span><br><span class="line"></span><br><span class="line">    SqlSession sqlSession = createSqlSessionFactory().openSession();</span><br><span class="line">    StudentMapper mapper = sqlSession.getMapper(StudentMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">//调用接口的更新方法，自动映射到 mapper.xml 文件的 update 标签</span></span><br><span class="line">    mapper.updateStudent(student);</span><br><span class="line">    sqlSession.commit();    <span class="comment">//提交事务</span></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/%E6%9B%B4%E6%96%B0%E5%89%8D.png" alt=""></p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/%E6%9B%B4%E6%96%B0%E5%90%8E.png" alt=""></p></li><li><p>删除学生</p><p>接口类添加：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除学生</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">deleteStudent</span><span class="params">(<span class="keyword">int</span> sno)</span></span>;</span><br></pre></td></tr></table></figure><p>mapper.xml文件添加：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;delete id=<span class="string">"deleteStudent"</span> parameterType=<span class="string">"int"</span> &gt;</span><br><span class="line">    delete from student where sno = #&#123;sno&#125;</span><br><span class="line">&lt;/delete&gt;</span><br></pre></td></tr></table></figure><p>测试类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deleteStudent</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    SqlSession sqlSession = createSqlSessionFactory().openSession();</span><br><span class="line">    StudentMapper mapper = sqlSession.getMapper(StudentMapper<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    <span class="comment">//调用接口的 deleteStudent 方法，自动映射到 mapper.xml 文件的 delete 标签</span></span><br><span class="line">    mapper.deleteStudent(<span class="number">11</span>);</span><br><span class="line">    sqlSession.commit();    <span class="comment">//提交事务</span></span><br><span class="line">    sqlSession.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/%E5%88%A0%E9%99%A4%E5%89%8D.png" alt=""></p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/MyBatis/%E5%88%A0%E9%99%A4%E5%90%8E.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《幸福之路》_幸福的原因_十二_情爱</title>
      <link href="/2019/12/12/%E3%80%8A%E5%B9%B8%E7%A6%8F%E4%B9%8B%E8%B7%AF%E3%80%8B-%E5%B9%B8%E7%A6%8F%E7%9A%84%E5%8E%9F%E5%9B%A0-%E5%8D%81%E4%BA%8C-%E6%83%85%E7%88%B1/"/>
      <url>/2019/12/12/%E3%80%8A%E5%B9%B8%E7%A6%8F%E4%B9%8B%E8%B7%AF%E3%80%8B-%E5%B9%B8%E7%A6%8F%E7%9A%84%E5%8E%9F%E5%9B%A0-%E5%8D%81%E4%BA%8C-%E6%83%85%E7%88%B1/</url>
      
        <content type="html"><![CDATA[<p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%B9%B8%E7%A6%8F%E4%B9%8B%E8%B7%AF/%E3%80%8A%E5%B9%B8%E7%A6%8F%E4%B9%8B%E8%B7%AF%E3%80%8B_%E5%B9%B8%E7%A6%8F%E7%9A%84%E5%8E%9F%E5%9B%A0_%E5%8D%81%E4%BA%8C_%E6%83%85%E7%88%B1.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
            <tag> 幸福之路 </tag>
            
            <tag> 罗素 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>健哥语录</title>
      <link href="/2019/11/07/%E5%81%A5%E5%93%A5%E8%AF%AD%E5%BD%95/"/>
      <url>/2019/11/07/%E5%81%A5%E5%93%A5%E8%AF%AD%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<p>我不是鼓励你去一条很长的路，一条布满荆棘，蜿蜒坎坷的路，我是想说，许多路许多看上去很短的路，实际上也许最艰难，它们不过是看上去很容易，但跨越那一步，你需要的不止是运气。所以，索性不如咬紧牙关，把人生当作一场长途旅行，也许最终到达顶点的时候，你会发现周围便是美丽人生，你不需要巴结谁，讨好谁，迎合谁，就已经得到了想要的一切 。</p><a id="more"></a><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%81%A5%E5%93%A5%E8%AF%AD%E5%BD%95/554911587183216094.jpg" alt=""></p><p><strong>1、 我是一个不设计的人，不设计就没那么多失落 。</strong></p><p><strong>2、好的生活就应该是平静的生活。生活的理想就是理想地生活。从小我们被集体主义洗脑，但我更强调个人的生活，个人生活至高无上，个人价值得崇尚，这才是好的社会，文明的社会就是尊重每一个人的生活。</strong></p><p><strong>3、孤独导致幻想，幻想导致创作。</strong></p><p><strong>4、钱，还有你所谓的名利，只能会帮到你，只能会让你激发出更多的灵感，因为一旦你成名后，你的时间会发现越来越少。</strong></p><p><strong>5、有多少所谓的闪光，就有多少那些灰暗的时刻。</strong></p><p><strong>6、大部分人在生活中是孤独无助的，所以，尽量过得平稳一些。我不是特别提倡或欣赏生活中寻找所谓大风大浪。</strong></p><p><strong>7、社会学说人都有向上流动的愿望。但我觉得在中国普通人向上流动是非常艰难的。</strong></p><p><strong>8、其实一个人还是应该了解自己，懂得认识自己，不能当别人夸大你的时候，你真的信以为真了。</strong></p><p><strong>9、我觉得人可能越学习越会觉得自己很差，就会觉得自己不够，这也是为什么要学习，学习才能知道你不足。</strong></p><p><strong>10、人就应该活在当下，把今天过得很积极过一天算一天，其实这句话并不是完全没有道理，就是并不完全消极的，它在我看来，这句话引申了人们更应该珍惜你今天所拥有的世界，其实你今天浑身不痛不痒已经是很幸福了，人应该有些大的格局，有些大的一个胸怀。</strong></p><p><strong>11、大部分生活都是庸常的，庸常变得日常，就能习以为常。人不要活在幻觉里，要脚踏实地地生活。</strong></p><p><strong>12、《当你老了》可以代表我对老去的希望，可能是老态龙钟，但是思维活跃，心底依然柔软，对世界充满好奇，不自以为是，仍然对知识充满渴望。</strong></p><p><strong>13、我不完美，更没想当任何人的偶像，成为偶像是非常危险的。</strong></p><p><strong>14、人在一生中可以欣赏很多人，但不一定都要占有他们。</strong></p><p><strong>15、我的很多烦恼被生活的小恩小惠抵消了，其实把生活放的低一些，就不会有那么多烦恼。</strong></p><p><strong>16、所谓名声，就是误解的总和，所以我们不必太在意，音乐家的专注和纯粹就是对外界纷扰的最大防范与抵抗。</strong></p><p><strong>17、商业从来就不是一个贬义词，每一个伟大的歌手背后都站着一个伟大的商业巨人。就像乔布斯曾经站在u2背后一样。</strong></p><p><strong>18、保护好自己的创作力是唯一需要我警惕的，而内心的平静则是前提。</strong></p><p><strong>19、越是学问渊博的人越谦卑，才疏学浅的人往往声色俱厉。</strong></p><p><strong>20、我心中理想的老人 ，是很吸引人的，我希望自己老了的时侯，变得更加开阔，能接纳一切人，对身份、地位没有偏见，对世界还很好奇，但有正义感，而且能够很勇敢。</strong></p><p><strong>21、假如有一天身陷苦难，一要接受，二要苦中作乐。</strong></p><p><strong>22、“一个人永远保持学生的状态，你的人生就不会枯竭。我理解的学生状态就是不拒绝新鲜事物，不放弃热情，保持对世界基本的信心和期待，这也是最好的状态。”</strong></p><p><strong>23、”所谓读书，大概就是让人眼界更宽，对自己有个更清醒的认识，不至于狂妄。”</strong></p><p><strong>24、跟周围比，你会发现有些很差的人，比你红，比你有钱，你会觉得这不公平，但你要觉得自己今年比去年好，比如说哪怕身体比去年好，或者多写一首歌，你都是有收获的。这不是一个精神自我安慰，它真正是一个好的人生哲学。因为任何领域里不太可能永远是公平竞争。人生是需要运气的，但是你自我不强大，你的希望会越来越小，运气我们无法左右，唯一能做的，就是把自我变得强大。</strong></p><p><strong>25、我不是鼓励你去一条很长的路，一条布满荆棘，蜿蜒坎坷的路，我是想说，许多路许多看上去很短的路，实际上也许最艰难，它们不过是看上去很容易，但跨越那一步，你需要的不止是运气。所以，索性不如咬紧牙关，把人生当作一场长途旅行，也许最终到达顶点的时候，你会发现周围便是美丽人生，你不需要巴结谁，讨好谁，迎合谁，就已经得到了想要的一切 。</strong></p><p><strong>26、如果运气不好，为了凑合，找一个不堪的人，其实还不如单身自由快乐。</strong></p><p><strong>27、如果能这样，我是欣慰的，因为音乐的魅力就在于抚慰人心。悦耳其实是低级的感官感受，终极目的是抚慰人心，就像佛陀讲的，这叫积德，是一种善举，这就够了。好听不是特别难，难的是让人家心灵为之一震。</strong></p><p><strong>28、可能不是因为我的生活比别人好，是因为我眼中的世界比别人美好吧。</strong> </p><p><strong>29、仿佛人的成长同过节的热情成反比。              ——《愿春节安然度过》</strong></p><p><strong>30、现在越来越不理解坚韧不拔的含义了，茁壮成长的前提是自然而发，风吹雨打是必不可少的，否则就不叫独自成长。——《无题》</strong></p><p><strong>32、我可不愿成为愚乐圈的一员。——《由声援瞿颖想到的》</strong></p><p><strong>33、越来越热爱生活了，不知是懂得珍惜了，还是害怕它失去。——《我回来了》</strong></p><p><strong>34、把人工具化，让商业价值成为社会的一个普适价值是非常危险的。人其实就是为情而来的。所谓体验世界，其实就是为了体验各种各样的情感，亲情，友情，也包括沮丧，激动。</strong></p><p><strong>35、你得好好跟自己相处，让内心的你和在外在的你尽量变成一个人。</strong></p><p><strong>36、很多原来不属于你的东西会进入你的生活，要学会拒绝。</strong></p><p><strong>37、当你对于物质生活的要求越低，你在精神上就越自由，你的心灵生活就越丰富。</strong></p><p><strong>38、就像余华说的，生命的意义就是活着，不是为活着以外的东西活着。</strong></p><p><strong>39、我的智商足以搞定世俗的事，但我不愿意去。</strong></p><p><strong>40、欢乐与痛苦，真实与虚无，生与死…总是成双成对，如影随形。</strong></p><p><strong>41、其实每个人都不容易，尤其是在世事纷乱的今天，无论或卑微，贫穷抑或富有，都很脆弱随时身陷囹圄。所以，彼此还是宽容些吧。</strong></p><p><strong>42、我希望我的唱片未必需要畅销，但是可以长销，慢慢地被人认识，被人喜欢。</strong></p><p><strong>43、没有什么能够比忍耐哭泣更让人需要格外的毅力了。</strong></p><p><strong>44、你喜欢的东西如果做到极致，别人或者市场是有可能接受的。</strong></p><p><strong>45、热爱文学或是喜欢音乐的人都不太可能是坏人。</strong></p><p><strong>46、人生不是为了寻找答案而来，大部分事情都像是一次体验。哲学问题里的从哪里来到哪里去，现在不依然是无解吗？探求答案其实是无意识的，但探求答案的过程是有意义的。</strong></p><p><strong>47、沉默不语，那不是真正热爱这个国家。</strong></p><p><strong>48、美国是空气好，但是你得到了天空，失去了土地。</strong></p><p><strong>49、危险的诱惑无时无刻不在。但是人应该去管理自己，让自己变得更像自己。</strong></p><p><strong>50、沉默比抱怨更有意义，你唯一能做的事情，就是身体力行去创作好作品。</strong></p><p><strong>51、人可以变老，但要老的体面一些。</strong></p><p><strong>52、我只是相信，人始终是变化的。人一定是变化的，今天和昨天都不太一样。</strong></p><p><strong>53、我是个悲观的乐观主义者。</strong></p><p><strong>54、我觉得每个人都像是陀螺，如果身陷苦难，一要接受，二要苦中作乐。</strong></p><p><strong>55、你所有的那些积累，可能就是为那样的一个真正的机会所准备的。</strong></p><p><strong>56、四十岁是第二个青春期。</strong></p><p><strong>57、作出抉择的唯一标准就是遵从内心。</strong></p><p><strong>58、任何时候，我都不去跟现实对撞。</strong></p><p><strong>59、我的观点是，跟世界保持绝对的联系，但又同时保持一种独立的状态。</strong></p><p><strong>60、让人知道你很容易，但要被人家欣赏，收纳是很难的。只有靠优秀的作品，才能真正赢得尊重。</strong></p><p><strong>61、坚持不是被迫的，是因为热爱。当你的才能不被关注时，你是否还能够一如既往的安静地去做。人们不要总觉得我有这些才能就应该得到相匹配的荣誉，其实这个世界上没有一个绝对的公平法则，不会对待每个人都一样。但当有天你足够强大了，你可能被认识，被认可的几率更大。</strong></p><p><strong>62、谁说人一定要活的明明白白，人生就是时间，人生最重要的事情就是活着，是一种体会属于人类情感的岁月，人的情感还是最有魅力的。</strong> </p><p><strong>63、 好的婚姻让人如虎添翼，就像此刻我是一只飞虎。</strong></p><p><strong>64、那些年，在外人看来是沉寂的，在我看来却是沉积。</strong></p><p><strong>65、最重要的是，它让我在大众化之后，看清楚自己的位置——成名是幸运。这种清醒，拜那些闲散光阴所赐。</strong></p><p><strong>66、欣赏，不一定是占有。因为占有，往往就是失控的开始，人很难掌握非常复杂的情感，我也不愿意去掌握。</strong></p><p><strong>67、勿强留，随它去。在年轻的时候，男人肯定爱一个女人的容颜，但多年之后，真正打动他的，却是这个女人与他一起生活时，发生的细小改变，是跟他一起经历过的那些旧日时光。</strong></p><p><strong>68、青年时代容易迷茫，但迷茫是自我认知的开始。</strong></p><p><strong>69、在这个大时代里，每个人一生短暂，个人生活的经营似乎显得尤为重要。我想每个人真正的乐趣并不会太多，但要看重它，要对之经营和投入，尽量把它培养成更大的乐趣。</strong></p><p><strong>70、我基本不愿意在别人面前表露自己的情感。喜悦另当别论。人就是一个状态。</strong></p><p><strong>71、我个人认为，两个人其实是共同成长，相互影响，三十岁以前的人的面貌长相还是父母遗传给的，三十岁以后还是靠自己，靠自我的境遇，靠自我的一个调教吧！真的相由心生其实说的很对。</strong></p><p><strong>72、我从来就是不太在意市场，或者说我从来就不知道什么才是市场最好的时机，我只能够把握我的作品是我在我这里什么时候是可以拿出去的。其实我的很多幸运来自于我的简单，真的，包括对人，说心里话我对任何人都不设防，就是我从来不防什么人，有人说你会吃亏，你可能会吃亏，但是对于防范的那种准备，比起那些小而又小在我看来那些所谓的损失，那个是不可同日而语的，就是你不太…因为你处心积虑的想一些防范，那些不够放松的心态换取的，患得患失那是没有必要的，其实你损失不了什么，真的。当你简单了，别人对你就简单，大家都知道你是一个很缜密，然后很圆滑，那人们基本不太会对你敞开心扉，当你简单了，别人对你也简单，其实这是一个很好的，所以没必要太想太多，比如包括演唱会的音乐以外的部分，我基本不太会像其他歌手那么亲力亲为，因为你的能力是有限的，对于灯光电，声光电这些事情，我一定没有杨工没有导演他们专业，你一定要听他们的，你能把握的就是你认为你自己最专业的，你能把握的就是你的演唱和你的音响的判断和音乐本身，这就是你能做的事情，其他一概不管，包括这些年，人们说有人劝我做点什么投资，然后跟什么公司融资，又什么好像IP、PE，我一分钱股票都没有，因为那个…我不感兴趣，所以我那个就不会去介入。其实人们对生活的索取，其实是有限度的，对我个人来讲。</strong></p><p><strong>73、我从来就不想争第一，因为我觉得在任何环境里，在任何时代里面，当第一名是非常危险的，无论在哪个行业，当第二名第三名是更适合我，其实我不太看重所谓事业一定要达到一个什么顶峰什么辉煌，其实有很多时候，那对生活来讲没有真正的意义。舞台，从理论上来讲也是虚幻的，人永远留恋舞台其实是，是很有可能出问题的，就是你一定要分清舞台跟真正生活的区别。</strong></p><p><strong>74、对，一定要…自己应该处于一个边缘的状态，就是当你有演唱会的时候有专辑的时候你可以出现在媒体，千万不要天天的出现在公众视野里，弄一话题，这话题里也有你，那话题里有你，那个是非常，是我非常警惕的。其实你的作品应该直指人心，有可能让人们津津乐道，但人一定是很边缘的，就是不应该老出现在媒体面前，大众面前，我还是那句话，更看重我个人的生活。什么是你的生活？你那些喜好就是你个人的生活，当你越来越红的时候，意味着你的时间越来越少，你越来越没有时间去培养和继续经营那些生活乐趣，那是没意思的。比如说我喜欢旅行，我喜欢真正的生活我认为是闲散的，我觉得那样的生活才是我喜欢的，你那么忙哪有时间享受乐趣，时间会过的很快的，而且我希望我享受这些乐趣的时候是在我身体状况非常好的，在我身体力行的情况下，当我有一天我身体残弱，被人推着轮椅四处转，我觉得那个不是我最想要的，我还是希望我能自己爬山，身体状况很好，我能游泳，我能步行，这个是我喜欢的。无数个奖项，再看着把我眼睛晃成迷糊的奖杯，或者是我的存款里有更多的钱，有多少亿，那没有意义，一点意义没有，因为我见过那些最富有的人，他们生活我觉得是殚精竭虑的，或者是处心积虑的，总是很焦虑，永远觉得钱不够，永远觉得需要做的事，需要更多的钱。因为你要做一件事情，就会投入。为什么现在很多人找我做电影音乐基本不太会答应，因为它会耗你很多时间，音乐比较好的就是一个人就完成了，就几个人，电影音乐是一个团队，人太多了，得跟各种人打交道，跟投资人，很多投资人那些，包括你可能面临着你要跟你不得不跟你不太喜欢的人去打交道，这是让你很为难的事情。所以我觉得，现在这样，能够靠音乐养活自己，养活的不错，有来自听友们对你的音乐也很喜欢，这就够了，没必要当超级的巨星，我曾经说过什么巨星，那都是一种调侃，生活是多么的可贵，我觉得应该享受，比起舞台眩目的灯光我更愿意享受真正的阳光，真正的阳光。灿烂的，自然界的阳光，我觉得那个光比舞台的光更真实更让人感到舒适。</strong></p><p><strong>75、还是喜欢真正的生活，但有的人，人是千差万别的，有的人可能就是为舞台而生，有的人就为艺术而生，像梵高这样的人，他就是为艺术而生，但我是自认为是为生活而生，活着就是为了体验生活中的这一切，大起大落那种生活其实是应该避免的。我喜欢潺潺流水的平稳的生活，我不太喜欢惊涛骇浪，所以我一直不太鼓励更多什么年轻人经历更多的坎坷，坎坷很多时候都是灾难的，都是历史的一个说辞，我觉得我都希望更多人能够安稳的过一生，没有什么风浪，所以我觉得这个时代我很幸运，我没有赶上文革，我没有赶上那些像其他国家那种战争的年代，但我们也经历了环境污染，人心的这种不定，这种转型人的焦虑，每个时代都有每个时代的问题，相对来讲我觉得是自己很幸运的，你看最近这种难民，你就会发现，基本没有天灾，都是人祸，这个世界上基本都是人祸，苦难都是人造成的。</strong></p><p><strong>76、红还能接受，红的发紫脸色就会很难受，你见过人脸紫色也会好看吗？所以我还是那句话，不太喜欢当第一名，或是总议论你，他对你影响。有的人觉得爆红是件好事，但我觉得这个脸色红扑扑还行，脸色发紫就不好看了，有点像…那不是一个好看的脸色，一个人需要一个很自然的，就像你在一个顶端，顶端一定会有很多风吹雨打的，就像你登得越高你感觉风的力量越强大，人的承受力都是有限的。有的人信奉所谓的成功学，这也是能反映目前的一个状态，功利的一个状态，其实我觉得这种成功其实来自于人们对成功的一种一味的追求，或者是说价值观的问题，就以商业上的成功判断一个人唯一的标准，其实我想这也受美国人影响，美国梦，美国梦和欧洲梦就完全不一样，美国人特别鼓励自我奋斗英雄梦，包括好莱坞那些提倡那些东西，但是它有好的一面，也有，在我看来有消极的一面，对。</strong></p><p><strong>77、我依然不太会投其所好写什么东西，而且我不知道大众好什么，可能大众好那些东西，网络歌曲那些恶搞的或是那些趣味的，有趣味的那种话我写不出来，就是你还是更加一如既往写自己能写的东西，也有可能写的比原来更形而上了，或者更不容易理解了，这都是我个人的喜好。但恰恰我之前看了一些评论说我写的都是一些风和自然界的东西，表面上的确是这样，但我的作品从来不是单纯的大自然或者空中楼阁，其实我作品里面隐喻都是跟人们的生活息息相关的，我只不过是写作方法的原因，我觉得我活在当下，我的作品是流行歌曲，你做的不是古典音乐，你的作品一定是跟时代息息相关，这是我遵循的。它可能看似风清雨淡在写自然，但其实我的隐藏意思，其实都在写人，写这个社会，人是写不完的。</strong></p><p><strong>78、我碰上了一个充满善意的娱乐时代，在这个娱乐的充满善意的娱乐环境里，我觉得挺好玩，因为我希望我的作品是严肃的，但是我在谈到作品以外的时候，大部分是一个轻松充满乐趣的，充满趣味的，这个趣味并不是来自于我的刻意炫耀，是我为人处事的一个观点，生活已经够…有的时候够烦心，讲起话来应该更轻松一些。我不希望我的作品，直指人心也好，写社会的一些问题，然后你讲话如出一辙，那个不是我喜欢的一个生活方式。这些什么外号，我觉得挺有乐趣的，这些乐趣能够让节目更轻松，带来更多轻松的话题气氛，我是能接受，而且也挺好，我开始逐渐的乐在其中。</strong></p><p><strong>79、你什么不做才会没有议论，你只要有做事一定会有人议论，但你要记住，别人终究在议论，而你在做事，这就可以了。</strong></p><p><strong>80、我唯一想明白的一件事情就是这个世界是你想不明白的……其实没必要得出什么结论，只是探讨、描述就可以了。</strong></p><p><strong>81、信仰，信仰很多时候就是信一信、仰一仰。我不会自寻烦恼。想那些事情太劳神了，想一想看一看，我还是一个生活享乐主义者，享乐主义者的标准就是浅尝辄止，深陷其中一定是自讨苦吃。音乐的魅力在于反映一些小的事件上，写那些细节。</strong></p><p><strong>82、时代是不需要你呼应的，你生活在时代中，你怎么写都摆脱不了这个时代的印记。</strong></p><p><strong>83、人都需要自我约束和强制，这个效果会在日后显现。</strong></p><p><strong>84、要强迫自己读一些看不懂、不好读的书。梁文道说，读一些让自己稍微费些力的书才会有长进。童话读起来不费力，但你不可能一辈子读童话。《追忆似水年华》和《哈扎尔辞典》，它们不像心灵鸡汤那么好读，但强制自己读下来一定有提高。</strong></p><p><strong>85、尽量少一些大而无当的虚荣，尊重和爱护曾经拥有的日常生活，学习如何与自己相处，这很重要。</strong></p><p><strong>86、没有那么多钱的时候，就把生活要求放低。人要适应生活，才能找到更大的乐趣。我不是特别赞成人生一定要经受多大的挫折。这是一个信息发展的时代，带给人的挫折感已经足够了，不需要额外的。人生苦短，何必自己折腾自己，要善待自己。</strong></p><p><strong>87、做太有名的人，其实不太会过得很好，太有钱或者太穷的人不会过得太好，所以我一直在找，中庸之道在这方面还是有些作用的。比如说也有人鼓动我成为什么股东，加入这个或者那个赚更多的钱，我觉得对我来讲不是一个好的事情，因为人的一生是有限的，人花钱的能力也是有限的，你可能不需要那么多的物质，名利就是一个双刃剑，刚开始可能真是帮到你，后来可能就会影响到你的生活。</strong></p><p><strong>88、博客天下：你也担心被推上神坛，然后被拆解？</strong></p><p><strong>李健：我不担心，我从来不承认自己是男神，我是男人，没有神。人造神的下场都不太好，不说谁了。人是有缺点的，人是因为有缺点才变得生动而可爱，真的。</strong></p><p><strong>我觉得人生苦短，应该多几个人生乐趣，倒不是说及时行乐。人要享受今天，人们不应该对未来有太多计划，就应该活在当下。</strong></p><p><strong>人的很多烦恼来自于自我定义和自我设计。自我设计时，生活一定不如你所愿，烦恼随之而来。这不是心灵鸡汤，这就是我个人体会。</strong></p><p><strong>89、博客天下：作为歌手，你有没有什么特别遗憾的事情？</strong></p><p><strong>李健：我个人没什么遗憾。有些大的遗憾是，歌坛的大环境改善太慢了。</strong></p><p><strong>举个例子，盗版是怎么绝迹的？是因为网络的免费下载，而不是人们意识到不买盗版产品。中国内地的地下音乐都是什么生存状态？ 写一首歌，基本不太可能靠版权赚钱。现在歌手都变成一个体力劳动者，靠每一次演出，像一个作坊一样的赚钱。</strong></p><p><strong>如果我这样的人变得特别有钱，这个环境就好了，因为不需要靠卖唱为生，可以在家坐等版税。日本的小室哲哉就这样，也不是特别有国际影响力的编曲制作人员，但他有20多辆法拉利。</strong></p><p><strong>什么时候我们这里像张亚东这样的，能有20多辆法拉利，环境就好了。现在国内没有词曲作者，因为无法生存。我告诉你，写一首歌才5000块钱，一年写10首，才5万块。现在选秀节目都没有作品可以唱了，翻来覆去就唱那些，所以节目的可看度也少。</strong></p><p><strong>在国外任何一个商演，都要付词曲作者费用的，包括制作人。这并不是说什么都要钱，但你必须让人家安居乐业。为什么相声和小品都没落了？写一个相声也就几千块钱，得写好几个月。</strong></p><p><strong>现在逼着很多不会唱歌的幕后人员都去参加选秀，让人看着很心酸。很多非常优秀的作曲者，不会唱歌，只能去辛辛苦苦给电视剧做点音乐。</strong></p><p><strong>博客天下：你的意见很深刻，你本人有在为此做什么事情吗？</strong></p><p><strong>李健：我没做什么事。我很幸运，我是一个能唱的写歌人。我如果不能唱，也很惨。</strong></p><p><strong>博客天下：比方说你怎么打盗版？</strong></p><p><strong>李健：我从来不打盗版，那不是我的事。那是国家的事情。</strong></p><p><strong>博客天下：那你就这么认了？</strong></p><p><strong>李健：对，因为你毫无能力。沉默比抱怨更有意义，你唯一能做的事情，就是身体力行去创作好作品。抱怨没有意义，你说等环境好了再去创作，也许你都老了。但我相信，这个国家如果全力以赴做这些事情，会很快能解决。</strong></p><p><strong>90、我的歌一直都有反思的色彩，只不过是隐藏着的，包括歌词的意欲和表达方式，是内敛的，也是节制的。这种社会责任感并不是通过标榜个性来呈现的，是对自己不自觉的一个意识的阐释。</strong></p><p><strong>91、老有人说，要倾听自己内心的声音。但是很多人心里是没有声音的，都是被活着，被变化。我们这一代70后算是幸运的，躲过了文革和反右，中学时代被洗脑得不太严重，所以大学时代也很容易就能够解毒。90年代出现那么多新东西，如果既有的自己不够坚固，那么很容易就被摧毁掉了。很多50后就很难，成了时代的牺牲品。真正的无依无靠，就是到了老年毫无兴趣。</strong></p><p><strong>92、有人认为我是混娱乐圈的，但我个人觉得自己没有多少娱乐精神。我的作品是严肃的。</strong></p><p><strong>93、歌手应该很专注于歌曲、音乐，而不应该做很多。即使大家喜欢你，也不能每天都出现在娱乐新闻里，还是应该保持一个若即若离的状态。任何行业中，做人都需要有一个很边缘的姿态，但作品需要直中靶心，直击心灵。艺术家追求个性，企业家照顾大众。</strong></p><p><strong>94、一个刚刚毕业的年轻人，在寻找自己未来的方向时，更多的是要解决自己的生活问题，这还不包括那些不可预知的精神烦恼。“海阔凭鱼跃，天高任鸟飞。”可是，这泛泛的天高地远实际上更是窘境，就好像在一个已然茂密的丛林里给许多未来的参天大树找到一个栖身之地一样困难。</strong></p><p><strong>95、常听说，人要有梦想，那我们说说关于梦想的“梦话”。梦想可以有，但大部分梦想是实现不了的。即使实现不了那也没关系，我们依然可以活得很好，或者说，有些梦想实现不了更好，这意味着没有付出有可能是很沉重的代价。生活中，大多数人是平凡的，平凡没有什么不好，平凡自有它的幸运和乐趣。</strong></p><p><strong>96、在我们拥有梦想的时候，通常都是一厢情愿的，对生活和社会还不了解，随着时间的流逝，与生活的朝夕相处，逐渐会感到那些梦想越来越远，有人会因此郁郁寡欢，有人会开始淡忘梦想，而很不幸的是其间有可能会看到某个电影或者某篇心灵鸡汤，里面大力地描述和鼓吹一个人是如何历经千辛万苦而最终实现了梦想的，而你的心再一次被唤醒，开始反思或是抱怨目前的处境。</strong></p><p><strong>97、我并不是否定去实现所谓的梦想，而是想说，实现不了梦想是很正常的，它不可以成为你郁郁寡欢的理由，梦想的存在，是可以让你能够隐隐感觉存在于生活远处的某种美好，而它的意义绝非是一定要有一天它真的降临到你面前，这就像是祈祷，心愿成真更好，不能成真也很正常，而你也并非是要完全依赖于它。</strong></p><p><strong>98、我想说的是，四十而立就不错了，三十能立更好，不“立”也没关系，因为这些“立”与“不立”都是别人眼里的，而你的世界理论上真的与他人无关。生命，就是时间之旅的体验，你可能没有世俗意义上的成功，但这并不妨碍你去寻找和积累生活的乐趣。其实，懂得生活了，过一种自得其乐、有滋有味的生活，就是所谓的“立”了。</strong></p><p><strong>这个“立”字，按照我个人理解，如果从字源学上来讲，就是人活在天地之间而已，只不过最上面的“﹑”告诉我们，活着要有一些光亮，一些智慧而已。恰恰，我们对于很多事情的理解常常也就差这么一点儿。</strong></p><p><strong>99、这是一个百科知识泛滥，信手拈来如此轻易的时代，但越是这样，观点、见解恰恰弥足珍贵。观点可能是值得商榷的，但至少拥有自己的观点，就是好的，如果没有自己的观点的话最好也不要人云亦云。</strong></p><p><strong>100、长长来路，心生温度。</strong></p><p><strong>——————————————————————</strong></p><p><strong>1、输赢并不见得是谁比谁差，只不过比赛中人们会从不同的角度和标准去衡量。我一定要在音乐中指明他们真正的优势和问题。不能让一个节目的纷繁复杂和眼花缭乱的表象，干扰一个人在音乐上长期的信仰和积累。</strong></p><p><strong>2、新京报：你之前上综艺节目，向观众推荐《哈扎尔辞典》，带着莱昂纳德·科恩的诗集，很多人觉得新鲜，就你个人而言，这种“错位”没有给你带来丝毫的不合时宜感吗？</strong></p><p><strong>李健：感到不合时宜的人才是真的不合时宜的。这些有营养的书籍是文化的经典，被人类被时间所认定的。我们现代人获得的知识体系越来越不完整、越来越碎片化。</strong></p><p><strong>现在的人文标准比起从前还是下降了，知识量和思想体系变得轻薄了。真正的知识内核变少了，被消息和新闻取代了。而科技进步取代不了文化的培养。人们似乎以为可以不用再存储知识了，但没有积累无法建立自己的体系，自己面对世界是茫然无助的。</strong></p><p><strong>几千年的知识传统是不应该忽视的，我个人认为传统的学习方式是不可放弃的，最基本的素质和技能是必须的，否则很容易暴露出文化的缺陷，不可以永久的掩饰下去。</strong></p><p><strong>3、绝大多数人是惧怕跟别人相异的，生活方式我更强调自得其乐，而非从众。</strong></p><p><strong>4、新京报：感觉你整个人都散发着一种“顺其自然、与世无争”的仙儿气，这其中有对你的误读吗？回想过去，有没有对什么特别有执念、放不下，逆命运轨迹的经历？</strong></p><p><strong>李健：这是一个极大的误读。我们的社会是个无神论的社会，是不容许崇拜神仙的。“得失无意，成败不计”这是人生应该追求的一个顶点，我远远没有做到。</strong></p><p><strong>5、</strong>我希望我的学员，节目结束时能具备成为职业歌手的基本素质。因为无论是冠军、亚军，节目之后开始迈的那步，还是叫“起步”，<strong>拥有独立能力和态度，才是最重要的</strong>。</p><p>所有这些培训就像热身，音乐之路最终要靠选手本身。希望他们在出发之前，对自我、对音乐环境，有整体认知，如果能加上独立正确的音乐态度，则更加可贵。这也是这个节目给予选手的最大培养。</p><p>即使成为冠军，距离成为巨星也是遥遥无期的，需要作品的长期积累。目前选手都是在翻唱别人的歌曲。</p><p><strong>6、“留下的不代表春风得意、捷足先登， 离去的也不是黯然神伤、举步维艰。”</strong></p><p><strong>7、</strong>“我希望打破藩篱。敢于变化的人要承担风险，也有可能会面对非议。<strong>如果一个人连这点非议也承受不了，那什么也干不了了。</strong>”</p><p><strong>8、李健：真正的音乐观还是应该初心纯粹。现在可能是到了很必要的时刻，来传递我的音乐观：音乐终究是艺术品，虽然它具有商品属性，但终究是属于艺术范畴的。</strong></p><p><strong>9、演唱者的音乐观，我认为不能过于煽情，也不能带有某种竞技性质，那些音乐之外冗余的成分，比如刻意地表现高音和过多的演唱技巧，其实是支离破碎了歌曲的表达，歌曲的形式是为艺术服务的。</strong></p><p><strong>10、“如果你对某个行业有足够的热爱，而且这种热爱是纯粹的，这种热情基本上能够抵御外来的侵害。因为你这样热爱，你会无法割舍，无法放弃。”</strong></p><p><strong>11、对一个人的欣赏，有时候是从艺术层面，有时候是从文化层面，也有时候是对一个人的社会角色而言。但是作为一名音乐创作者，我更倾向于人们与我的作品产生共鸣。我本意并不愿意人们关注到我自己，我希望我的作品成为与外界交流的唯一中介。</strong></p>]]></content>
      
      
      <categories>
          
          <category> 修行 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 修行 </tag>
            
            <tag> 李健 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于兴趣</title>
      <link href="/2019/08/29/%E5%85%B3%E4%BA%8E%E5%85%B4%E8%B6%A3/"/>
      <url>/2019/08/29/%E5%85%B3%E4%BA%8E%E5%85%B4%E8%B6%A3/</url>
      
        <content type="html"><![CDATA[<p>任何事物都是有他有趣的地方的，如果你觉得一件事很无聊，那么你很可能没有get到他的有趣点，或者正向反馈太少。</p><a id="more"></a><p>背单词也是如此，得讲方法。使用词根词缀法记忆比直接死记硬背要靠谱得多。</p><p>单词一般由三部分组成：词根、前缀和后缀。词根决定单词意思，前缀改变单词词义，后缀决定单词词性。</p><p>常见的前缀有如下几类：</p><blockquote><p>第一类：表示正负（或增减）的，如：<a href="https://www.baidu.com/s?wd=un&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">un</a>-in-im-il-ir-non-mis-m<a href="https://www.baidu.com/s?wd=al&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">al</a>-dis-anti-de-<a href="https://www.baidu.com/s?wd=un&tn=SE_PcZhidaonwhc_ngpagmjz&rsv_dl=gh_pc_zhidao" target="_blank" rel="noopener">un</a>der-re-over-等；</p><p>第二类表示尺寸的，如：semi-equi-mini-micro-macro-mega-等；</p><p>第三类表示位置关系，如：inter-super-trans-ex-extra-sub-infra-peri-等；</p><p>第四类表示时间和次序，如：ante-pre-prime-post-retro-等；</p><p>第五类表示数字，如：semi-mono-bi-tri-quad-penta-hex-sept(em)-oct-dec-multi-等；</p><p>其它类别，如：pro-auto-co-con-等。</p></blockquote><p>通俗上讲就像是语文的偏旁部首，词根在单词开头，词缀在结尾，是用来组成单词的，根据词根词缀是可以推出单词的意思。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%85%B3%E4%BA%8E%E5%85%B4%E8%B6%A3/%E8%AF%8D%E6%A0%B9%E8%AF%8D%E7%BC%80.png" alt=""></p><p>词根是构词的基本词素，它与词缀相对，并带有主要的词汇信息。词根分为两种，能独立构词的是自由词根，必须与其他词素结合构词的是粘附词根。</p><p>举个栗子🌰：accustom：-custom表示习俗，-acc辅音字母双写表增强，长此以往的习俗就成了习惯；    accustomed：-ed表示形容词尾缀，所以翻译成习惯的。</p><p>再如：broadband：-broad表示宽阔的，-band有（1）群，队（2）段，频段（3）带，条 的意思，所以broadband –&gt; 宽阔的带子 –&gt; 宽带</p><p>pop band / rock band –&gt; 流行乐队/摇滚乐队</p><p>banner –&gt; 旗帜。</p><p>然后就是学习时的正向反馈，战线不能拖太长，给自己的门槛要低一点。每次背词结束后都应该是一个轻松愉悦的心情，这会给明天开个好头。</p><p>最后，及时的复盘是十分有必要且重要的，这将贯彻你的整个学习过程。</p><p>学习是一辈子的是，人说偏见源于无知，唯有不断地学习和进步才能减少或者消除无知所带来的偏见。人生如戏，我们从生下来就在演绎着我自己这个角色。</p><p>愿学业有成，自由幸福！</p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 单词 </tag>
            
            <tag> 四级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>右键菜单没有Git Bash Here</title>
      <link href="/2019/08/16/%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%B2%A1%E6%9C%89Git-Bash-Here/"/>
      <url>/2019/08/16/%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%B2%A1%E6%9C%89Git-Bash-Here/</url>
      
        <content type="html"><![CDATA[<blockquote><p>1、Win+R 打开运行输入regedit 回车打开注册表</p><a id="more"></a><p>2、找到[HKEY_CLASSES_ROOT\Directory\Background]。</p><p>3、在[Background]下如果没有[shell],则右键-新建项[shell]。</p><p>4、在[shell]下右键-新建项[Git Bash Here],其值为“Git Bash Here”,此为右键菜单显示名称。</p><p>​      此时在任意位置鼠标右击就能看到Git Bash Here但是没有关联程序，现在还没有实际作用</p><p>5、 在[Git Bash Here]下右键-新建-项[command],其默认值为 “git安装根目录\bin\bash.exe”</p><p>6、再完善一下添加一个Git的小图标：选中Git Bash Here右击-新建-字符串值，名称为Icon,双击编辑，</p><p>​      其值为“git安装根目录\mingw64\share\git\git-for-windows.ico”。</p></blockquote><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%B2%A1%E6%9C%89Git%20Bash%20Here/a.png" alt=""></p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E6%B2%A1%E6%9C%89Git%20Bash%20Here/b.png" alt=""></p><p><strong>原文链接：</strong><a href="https://blog.csdn.net/dyr_1203/article/details/83011526" target="_blank" rel="noopener">https://blog.csdn.net/dyr_1203/article/details/83011526</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>练听力得下真功夫</title>
      <link href="/2019/08/15/%E8%8B%B1%E8%AF%AD-001/"/>
      <url>/2019/08/15/%E8%8B%B1%E8%AF%AD-001/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>什么是真功夫？启功先生说：“功夫就是准确的重复。”这是千古不易的真知灼见，《启功给你讲书法》是学者的圣经。学书法是一个字一个字地练，准确重复多次，先贤的法书就逐渐融入了自己的肌肉记忆。下面这段录像介绍的脑神经研究成果，为启功先生的经验之谈提供了科学依据。</strong></p><a id="more"></a><p><strong>学外语，功夫也是准确的重复。语言的基本单位是句子，不是单词。一句话一句话地学，最好是背诵自己喜欢的短文或段落，准确重复多次，外语就融入了自己的生活和情感。</strong></p><p><strong>学外语，会听比会说更重要，也更难学会。练听力自然也得下真功夫。练听力，一定要听难度适宜的材料。是否适宜，衡量指标是阅读。文字材料，浏览一遍就能读懂，不适合练听力，内容太简单了；读一遍，只能懂百分之二三十，不适合练听力；认真读一遍能懂一半，适合练听力。</strong></p><p><strong>泛泛地听，例如听新闻、看电视、看电影，可以练出泛泛的听力，就是大概懂，但是听不准，听不清。这样的练习有用，缺点是容易制造虚幻的“用功感”和“成就感”，关键时候，比如现场口译，就会落空。这样练听力轻松愉快，顶多算半真半假的功夫。</strong></p><p><strong>怎样衡量练听力下的功夫是真是假呢？我的经验是看怎样分配时间。比如，每天有一个小时练听力，这一个小时从头到尾听的都是新材料，十有八九是下假功夫；把一小时分成30份，把一段两分钟的录音连续听30遍，百分之百是下真功夫。</strong></p></blockquote><p><strong>转自：</strong></p><p>​    <em>原创： 李连江</em></p><p>​    <em>微信公众号：在学术界谋生存</em></p>]]></content>
      
      
      <categories>
          
          <category> English </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 听力 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建-No Layout:index.html</title>
      <link href="/2019/08/15/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-No-Layout-index-html/"/>
      <url>/2019/08/15/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-No-Layout-index-html/</url>
      
        <content type="html"><![CDATA[<h2 id="编译时遇到的问题"><a href="#编译时遇到的问题" class="headerlink" title="编译时遇到的问题"></a>编译时遇到的问题</h2><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">No layout:index.html</span><br></pre></td></tr></table></figure><h2 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h2><h3 id="排错"><a href="#排错" class="headerlink" title="排错"></a>排错</h3><p>执行<code>hexo g</code>，编译出现警告，错误</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error peer dep missing: eslint@&gt;&#x3D; 4.12.1, required by babel-eslint@0.0.1</span><br></pre></td></tr></table></figure><p>可以发现缺少插件</p><h3 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install eslint --save</span><br></pre></td></tr></table></figure><p><strong>参考文章：</strong><a href="https://blog.csdn.net/calvin_zhou/article/details/91908712" target="_blank" rel="noopener">https://blog.csdn.net/calvin_zhou/article/details/91908712</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>腾讯云图床</title>
      <link href="/2019/08/13/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%9B%BE%E5%BA%8A/"/>
      <url>/2019/08/13/%E8%85%BE%E8%AE%AF%E4%BA%91%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><a id="more"></a><p>腾讯云的对象存储是有<a href="https://cloud.tencent.com/document/product/436/6240" target="_blank" rel="noopener">免费额度</a>的</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E8%85%BE%E8%AE%AF%E4%BA%91-%E5%9B%BE%E5%BA%8A/a.png" alt=""></p><h2 id="控制台配置"><a href="#控制台配置" class="headerlink" title="控制台配置"></a>控制台配置</h2><p>注意有两个关键的配置不能忽略</p><ul><li>存储桶（bucket）访问权限</li><li>防盗链设置</li></ul><h3 id="访问权限"><a href="#访问权限" class="headerlink" title="访问权限"></a>访问权限</h3><p>访问权限应设置为<strong>公有读私有写</strong>。很好理解，我们是要用COS来做图床的，必然是需要获取文件的直接链接才行，所以不能在读取图片的时候设置权限。</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E8%85%BE%E8%AE%AF%E4%BA%91-%E5%9B%BE%E5%BA%8A/b.png" alt=""></p><p><a href="https://cloud.tencent.com/document/product/436/13319" target="_blank" rel="noopener">权限设置文档</a></p><h3 id="防盗链"><a href="#防盗链" class="headerlink" title="防盗链"></a>防盗链</h3><p>如果被盗链会导致你的免费额度可能会快用尽，因此防盗链也是需要考虑的。<br>下图以我的博客地址为例 </p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E8%85%BE%E8%AE%AF%E4%BA%91-%E5%9B%BE%E5%BA%8A/c.png" alt=""></p><p>开启之后即使其他人获取到链接也无法访问相应图片 </p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E8%85%BE%E8%AE%AF%E4%BA%91-%E5%9B%BE%E5%BA%8A/d.png" alt=""></p><h2 id="上传取链"><a href="#上传取链" class="headerlink" title="上传取链"></a>上传取链</h2><h3 id="上传图片"><a href="#上传图片" class="headerlink" title="上传图片"></a>上传图片</h3><p>官方也有文件管理软件<a href="https://cloud.tencent.com/document/product/436/11366" target="_blank" rel="noopener">COS Browser</a> ，上传下载图片还是挺方便的。当然如果觉得这样子还是不够方便的话，可以基于腾讯云API自己开发应用</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E8%85%BE%E8%AE%AF%E4%BA%91-%E5%9B%BE%E5%BA%8A/e.jpg" alt=""></p><h3 id="获取链接"><a href="#获取链接" class="headerlink" title="获取链接"></a>获取链接</h3><p>要获取图片链接的话右键文件详情即可。将其复制下来即可使用。</p><p>注：因为开启了防盗链这设置，因此当你在本地写博客的时候会出现图片无法预览的情况。因为防盗链机制只允许白名单中指定域名或IP访问。<strong>也就是说只能在博客中看</strong></p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/%E8%85%BE%E8%AE%AF%E4%BA%91-%E5%9B%BE%E5%BA%8A/f.jpg" alt=""></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>关于图床，国内可以选择的有很多。</p><p>网上有很多使用微信以及微博来充当免费图床的。但是如你所见，微博微信想加一个防盗链来阻止外链访问是<strong>很容易</strong>的，把图放在那上面丝毫没有安全感。 </p><p>因此可以考虑腾讯云或者阿里云的对象存储服务，不过阿里云好像没有免费额度，因此没有选用。</p><p>七牛云与腾讯云类似，都可以使用免费的对象存储服务来充当自己的图床。</p><p>国外的一个知名图床 <a href="https://imgur.com/" target="_blank" rel="noopener">imgur </a>实在是可惜被墙了,不然用起来还是十分方便的。</p><p><strong>原文链接</strong>：<a href="https://blog.csdn.net/a201577F0546/article/details/80146350" target="_blank" rel="noopener">https://blog.csdn.net/a201577F0546/article/details/80146350</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 腾讯云 </tag>
            
            <tag> 图床 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建之在文章中插入图片</title>
      <link href="/2019/08/10/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E5%9C%A8%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/"/>
      <url>/2019/08/10/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B9%8B%E5%9C%A8%E6%96%87%E7%AB%A0%E4%B8%AD%E6%8F%92%E5%85%A5%E5%9B%BE%E7%89%87/</url>
      
        <content type="html"><![CDATA[<p>在写文章时，常常有配图说明的需求。Hexo有多种图片插入方式，可以将图片存放在本地引用或者将图片放在CDN上引用。</p><a id="more"></a><h3 id="本地引用"><a href="#本地引用" class="headerlink" title="本地引用"></a>本地引用</h3><h4 id="绝对路径"><a href="#绝对路径" class="headerlink" title="绝对路径"></a><em>绝对路径</em></h4><p>当Hexo项目中只用到少量图片时，可以将图片统一放在<em>source/images</em>文件夹中，通过markdown语法访问它们。</p><p><code>source/images/image.jpg</code></p><blockquote><p>   1                   !<a href="images/image.jpg"></a></p></blockquote><p>图片既可以在首页内容中访问到，也可以在文章正文中访问到。</p><h4 id="相对路径"><a href="#相对路径" class="headerlink" title="相对路径"></a><em>相对路径</em></h4><p>图片除了可以放在统一的<em>images*文件夹中，还可以放在文章自己的目录中。文章的目录可以通过配置</em>_config.yml* 来生成。</p><p><code>_config.yml</code></p><blockquote><p>   1                         post_asset_folder:   true          </p></blockquote><p>将<em>_config.yml</em> 文件中的配置项post_asset_folder设为true后，执行命令<code>$ hexo new post_name</code>，在<em>source/_posts<em>中会生成文章</em>post_name.md</em> 和同名文件夹<em>post_name</em>。将图片资源放在<em>post_name</em>中，文章就可以使用相对路径引用图片资源了。</p><p><code>_posts/post_name/image.jpg</code></p><blockquote><p>More Actions   1        !<a href=""></a></p></blockquote><p>上述是markdown的引用方式，图片只能在文章中显示，但无法在首页中正常显示。</p><p>如果希望图片在文章和首页中同时显示，可以使用标签插件语法。</p><p><code>_posts/post_name/image.jpg</code></p><blockquote><p>More Actions   1             &lt;!–￼0–&gt;    &lt;!–￼1–&gt;</p></blockquote><h3 id="CDN引用"><a href="#CDN引用" class="headerlink" title="CDN引用"></a>CDN引用</h3><p>除了在本地存储图片，还可以将图片上传到一些免费的CDN服务中。比如<strong>腾讯云</strong>，会生成对应的url地址，将地址直接拿来引用即可。</p><p><strong>原文链接</strong>: <a href="https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/" target="_blank" rel="noopener">https://yanyinhong.github.io/2017/05/02/How-to-insert-image-in-hexo-post/</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> 图片插入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设置侧边栏头像</title>
      <link href="/2019/08/10/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%A4%B4%E5%83%8F/"/>
      <url>/2019/08/10/%E8%AE%BE%E7%BD%AE%E4%BE%A7%E8%BE%B9%E6%A0%8F%E5%A4%B4%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<p><strong>原文链接</strong>：<a href="https://github.com/iissnan/hexo-theme-next/wiki/设置侧边栏头像" target="_blank" rel="noopener">https://github.com/iissnan/hexo-theme-next</a></p><p>编辑<strong>主题</strong>的 _config.yml，新增字段 avatar， 值设置成头像的链接地址。</p><a id="more"></a><p>其中，头像的链接地址可以是：</p><ol><li>完整的互联网 URL，例如：<a href="https://avatars1.githubusercontent.com/u/32269?v=3&amp;s=460" target="_blank" rel="noopener">https://avatars1.githubusercontent.com/u/32269?v=3&amp;s=460</a></li><li>站点内的地址，例如：</li></ol><ul><li>/uploads/avatar.jpg 需要将你的头像图片放置在 站点的 source/uploads/（可能需要新建uploads目录）</li><li>/images/avatar.jpg 需要将你的头像图片放置在 主题的 source/images/ 目录下。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
            <tag> 头像设置 </tag>
            
            <tag> _config.yml </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo - 指令</title>
      <link href="/2019/08/10/hexo-%E6%8C%87%E4%BB%A4/"/>
      <url>/2019/08/10/hexo-%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="init"><a href="#init" class="headerlink" title="init"></a>init</h2><a id="more"></a><p><code>$ hexo init [folder]</code></p><p>新建一个网站。如果没有设置 folder ，Hexo 默认在目前的文件夹建立网站。</p><h2 id="new"><a href="#new" class="headerlink" title="new"></a>new</h2><p><code>$ hexo new [layout] &lt;titil&gt;</code></p><p>新建一篇文章。如果没有设置 layout 的话，默认使用 <a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">_config.yml </a>中的 default_layout<br>参数代替。如果标题包含空格的话，请使用引号括起来。</p><h2 id="generate"><a href="#generate" class="headerlink" title="generate"></a>generate</h2><p><code>$ hexo generate</code></p><p>生成静态文件。</p><p>选项：</p><blockquote><p>-d, –deploy  文件生成后立即部署网站</p><p>-w, –watch  监视文件变动</p></blockquote><p>简写：$ hexo d -g</p><h2 id="publish"><a href="#publish" class="headerlink" title="publish"></a>publish</h2><p><code>$ hexo publish [layout] &lt;filename&gt;</code></p><p>发表草稿。</p><h2 id="server"><a href="#server" class="headerlink" title="server"></a>server</h2><p><code>$ hexo server</code></p><p>启动服务器。默认情况下，访问网址为： <a href="http://localhost:4000/。" target="_blank" rel="noopener">http://localhost:4000/。</a></p><p>选项：</p><blockquote><p>-p, –port重设端口</p><p>-s, –static  只使用静态文件</p><p>-l, –log  启动日记记录，使用覆盖记录格式</p></blockquote><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><p><code>$ hexo deploy</code></p><p>部署网站。</p><p>参数：</p><blockquote><p>-g, –generate  部署之前预先生成静态文件</p></blockquote><p>该命令可以简写为：   <code>$ hexo d</code></p><h2 id="render"><a href="#render" class="headerlink" title="render"></a>render</h2><p><code>$ hexo render &lt;file1&gt; [file2]</code></p><p>渲染文件。</p><p>参数：</p><blockquote><p>-o, –output 设置输出路径</p></blockquote><h2 id="migrate"><a href="#migrate" class="headerlink" title="migrate"></a>migrate</h2><p><code>$ hexo migrate &lt;type&gt;</code></p><p>从其他博客系统 <a href="https://hexo.io/zh-cn/docs/migration" target="_blank" rel="noopener">迁移内容</a>。</p><h2 id="clean"><a href="#clean" class="headerlink" title="clean"></a>clean</h2><p><code>$ hexo clean</code></p><p>清除缓存文件 (db.json) 和已生成的静态文件 (public)。</p><p>在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><p><code>$ hexo list &lt;type&gt;</code></p><p>列出网站资料。</p><h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><p><code>$ hexo version</code></p><p>显示Hexo 版本。</p><h2 id="安全模式"><a href="#安全模式" class="headerlink" title="安全模式"></a>安全模式</h2><p><code>$ hexo   --safe</code></p><h2 id="调试模式"><a href="#调试模式" class="headerlink" title="调试模式"></a>调试模式</h2><p><code>$ hexo --debug</code></p><p>在终端中显示调试信息并记录到 debug.log。当您碰到问题时，可以尝试用调试模式重新执行一次，并<br><a href="https://github.com/hexojs/hexo/issues/new" target="_blank" rel="noopener">提交调试信息到 GitHub</a>。</p><h2 id="简洁模式"><a href="#简洁模式" class="headerlink" title="简洁模式"></a>简洁模式</h2><p><code>$ hexo --silent</code></p><p>隐藏终端信息。</p><h2 id="自定义配置文件的路径"><a href="#自定义配置文件的路径" class="headerlink" title="自定义配置文件的路径"></a>自定义配置文件的路径</h2><p><code>$ hexo --config custom.yml</code></p><p>自定义配置文件的路径，执行后将不再使用 _config.yml。</p><h2 id="显示草稿"><a href="#显示草稿" class="headerlink" title="显示草稿"></a>显示草稿</h2><p><code>$ hexo --draft</code></p><p>显示 source/_drafts文件夹中的草稿文章。</p><h2 id="自定义-CWD"><a href="#自定义-CWD" class="headerlink" title="自定义 CWD"></a>自定义 CWD</h2><p><code>$ hexo --cwd /path/to/cwd</code></p><p>自定义当前工作目录（Current working directory）的路径。</p><p><strong>原文链接</strong>：<a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> 指令 </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>first</title>
      <link href="/2019/08/08/%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/08/08/%E4%BD%BF%E7%94%A8hexo-github%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h1><a id="more"></a><h2 id="1-1-创建仓库"><a href="#1-1-创建仓库" class="headerlink" title="1.1 创建仓库"></a>1.1 创建仓库</h2><p>新建一个名为你的用户名.github.io的仓库，比如说，如果你的github用户名是test，那么你就新建test.github.io的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <a href="http://test.github.io" target="_blank" rel="noopener">http://test.github.io </a>了，是不是很方便？</p><p>几个注意的地方：</p><blockquote><ol><li>注册的邮箱一定要验证，否则不会成功；</li><li>仓库名字必须是：<code>username.github.io</code>，其中<em>username</em>是你的用户名；</li><li>仓库创建成功不会立即生效，需要过一段时间，大概<strong>10-30分钟</strong>，或者更久，我的等了半个小时才生效；</li></ol></blockquote><p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦。</p><h2 id="1-2-配置SSH-key"><a href="#1-2-配置SSH-key" class="headerlink" title="1.2 配置SSH key"></a>1.2 配置SSH key</h2><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用<em>ssh key</em>来解决本地和服务器的连接问题。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~&#x2F;. ssh #检查本机已存在的ssh密钥</span><br></pre></td></tr></table></figure><p>如果提示：<em>No such file or directory</em> 说明你是第一次使用git。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;邮件地址&quot;</span><br></pre></td></tr></table></figure><p>然后连续3次回车，最终会生成一个文件在用户目录下，打开用户目录，找到<em>.ssh\id_rsa.pub<em>文件，记事本打开并复制里面的内容，打开你的github主页，进入</em>个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</em></p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/sshkey.png" alt=""></p><p>将刚复制的内容粘贴到key那里，title随便填，保存。</p><h2 id="2-1-测试是否成功"><a href="#2-1-测试是否成功" class="headerlink" title="2.1 测试是否成功"></a>2.1 测试是否成功</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T [git@github.com](mailto:git@github.com) # 注意邮箱地址不用改</span><br></pre></td></tr></table></figure><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入yes，然后会看到：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi liuxianan! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure><p>看到这个信息说明SSH已配置成功！</p><p>此时你还需要配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;liuxianan&quot;&#x2F;&#x2F; 你的github用户名，非昵称</span><br><span class="line">$ git config --global user.email  &quot;[xxx@qq.com&quot;&#x2F;&#x2F;](mailto:xxx@qq.com) 填写你的github注册邮箱</span><br></pre></td></tr></table></figure><h1 id="使用hexo写博客"><a href="#使用hexo写博客" class="headerlink" title="使用hexo写博客"></a>使用hexo写博客</h1><h2 id="3-1-hexo简介"><a href="#3-1-hexo简介" class="headerlink" title="3.1 hexo简介"></a>3.1 hexo简介</h2><p>Hexo是一个简单、快速、强大的基于 Github Pages 的博客发布工具，支持Markdown格式，有众多优秀插件和主题。</p><p><a href="http://hexo.io" target="_blank" rel="noopener">官网</a>                    <a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">github</a></p><h2 id="3-2-原理"><a href="#3-2-原理" class="headerlink" title="3.2 原理"></a>3.2 原理</h2><p>由于<em>githubpages</em>存放的都是静态文件，博客存放的不只是文章内容，还有文章列表、分类、标签、翻页等动态内容，假如每次写完一篇文章都要手动更新博文目录和相关链接信息，相信谁都会疯掉，所以hexo所做的就是将这些md文件都放在本地，每次写完文章后调用写好的命令来批量完成相关页面的生成，然后再将有改动的页面提交到github。</p><h2 id="3-3-注意"><a href="#3-3-注意" class="headerlink" title="3.3 注意"></a>3.3 注意</h2><p>安装之前先来说几个注意事项：</p><blockquote><ol><li>很多命令既可以用Windows的cmd来完成，也可以使用git bash来完成，但是部分命令会有一些问题，为避免不必要的问题，建议全部使用git bash来执行；</li><li>hexo不同版本差别比较大，网上很多文章的配置信息都是基于2.x的，所以注意不要被误导；</li><li>hexo有2种<em>config.yml文件，一个是根目录下的全局的</em><em>config.yml</em>，一个是各个<em>theme</em>下的；</li></ol></blockquote><h2 id="3-4-安装"><a href="#3-4-安装" class="headerlink" title="3.4 安装"></a>3.4 安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo</span><br></pre></td></tr></table></figure><h2 id="3-5-初始化"><a href="#3-5-初始化" class="headerlink" title="3.5 初始化"></a>3.5 初始化</h2><p>在电脑的某个地方新建一个名为hexo的文件夹（名字可以随便取），比如我的是<em>F:\Workspaces\hexo</em>，由于这个文件夹将来就作为你存放代码的地方，所以最好不要随便放。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd &#x2F;f&#x2F;Workspaces&#x2F;hexo&#x2F;</span><br><span class="line">$ hexo init</span><br></pre></td></tr></table></figure><p>hexo会自动下载一些文件到这个目录，包括<em>node_modules</em>，目录结构如下图：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/b.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g # 生成</span><br><span class="line">$ hexo s # 启动服务</span><br></pre></td></tr></table></figure><p>执行以上命令之后，hexo就会在<em>public</em>文件夹生成相关html文件，这些文件将来都是要提交到github去的：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/pub.png" alt=""></p><p><code>hexo s</code>是开启本地预览服务，打开浏览器访问*<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000 </a><em>即可看到内容，很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，因为*</em>4000**这个端口太常见了，解决端口冲突问题请参考这篇文章：</p><p><a href="http://blog.liuxianan.com/windows-port-bind.html" target="_blank" rel="noopener">解决端口冲突问题</a></p><p>第一次初始化的时候hexo已经帮我们写了一篇名为 Hello World 的文章，默认的主题比较丑，打开时就是这个样子：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/c.png" alt=""></p><h2 id="3-6-修改主题"><a href="#3-6-修改主题" class="headerlink" title="3.6 修改主题"></a>3.6 修改主题</h2><p>既然默认主题很丑，那我们别的不做，首先来替换一个好看点的主题。这是<br><a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方主题</a>。</p><p>个人比较喜欢的2个主题：<a href="https://github.com/pinggod/hexo-theme-jekyll" target="_blank" rel="noopener">hexo-theme-jekyll </a>和 <a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">hexo-theme-yilia</a>。</p><p>首先下载这个主题：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd &#x2F;f&#x2F;Workspaces&#x2F;hexo&#x2F;</span><br><span class="line">$ git clone https:&#x2F;&#x2F;github.com&#x2F;litten&#x2F;hexo-theme-yilia.git themes&#x2F;yilia</span><br></pre></td></tr></table></figure><p>下载后的主题都在这里：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/d.png" alt="d.png"></p><p>修改<em>_config.yml</em> 中的<code>theme: landscape</code>改为<code>theme: yilia</code>，然后重新执行<code>hexo g</code>来重新生成。</p><p>如果出现一些莫名其妙的问题，可以先执行<code>hexo clean</code>来清理一下public的内容，然后再来重新生成和发布。</p><h2 id="3-7-上传之前"><a href="#3-7-上传之前" class="headerlink" title="3.7 上传之前"></a>3.7 上传之前</h2><p>在上传代码到github之前，一定要记得先把你以前所有代码下载下来（虽然github有版本管理，但备份一下总是好的），因为从hexo提交代码时会把你以前的所有代码都删掉。</p><h2 id="3-8-上传到GitHub"><a href="#3-8-上传到GitHub" class="headerlink" title="3.8 上传到GitHub"></a>3.8 上传到GitHub</h2><p>如果你一切都配置好了，发布上传很容易，一句<code>hexo d</code>就搞定，当然关键还是你要把所有东西配置好。</p><p>首先，<em>ssh key</em>肯定要配置好。</p><p>其次，配置<em>_config.yml</em> 中有关<em>deploy</em>的部分：</p><p>正确写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">   type: git</span><br><span class="line">   repository: [git@github.com:liuxianan&#x2F;liuxianan.github.io.git]  (mailto:git@github.com:liuxianan&#x2F;liuxianan.github.io.git)</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure><p>错误写法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">   type: github</span><br><span class="line">   repository: https:&#x2F;&#x2F;github.com&#x2F;liuxianan&#x2F;liuxianan.github.io.git</span><br><span class="line">   branch: master</span><br></pre></td></tr></table></figure><p>后面一种写法是hexo2.x的写法，现在已经不行了，无论是哪种写法，此时直接执行hexo d的话一般会报如下错误：</p><p><em>Deployer not found: github 或者 Deployer not found: git</em></p><p>原因是还需要安装一个插件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>其它命令不确定，部署这个命令一定要用<em>git bash<em>，否则会提示</em>Permission denied (publickey)</em>.</p><p>打开你的<em>git bash</em>，输入<code>hexo d</code>就会将本次有改动的代码全部提交，没有改动的不会：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/e.png" alt="e.png"></p><h2 id="3-9-保留CNAME、README-md文件"><a href="#3-9-保留CNAME、README-md文件" class="headerlink" title="3.9 保留CNAME、README.md文件"></a>3.9 保留CNAME、README.md文件</h2><p>提交之后网页上一看，发现以前其它代码都没了，此时不要慌，一些非md文件可以把他们放到<em>source</em>文件夹下，这里的所有文件都会原样复制（除了md文件）到<em>public</em>目录的：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/f.png" alt="f.png"></p><p>由于hexo默认会把所有md文件都转换成html，包括README.md，所有需要每次生成之后、上传之前，手动将README.md复制到public目录，并删除README.html。</p><h2 id="3-10-常用hexo命令"><a href="#3-10-常用hexo命令" class="headerlink" title="3.10 常用hexo命令"></a>3.10 常用hexo命令</h2><blockquote><p>常见命令</p><p>hexo new “postName” #新建文章<br>hexo new page “pageName” #新建页面<br>hexo generate #生成静态页面至public目录<br>hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy #部署到GitHub<br>hexo help  # 查看帮助<br>hexo version  #查看Hexo的版本 </p><p>缩写：</p><p>hexo n == hexo new<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy </p><p>组合命令：</p><p>hexo s -g #生成并本地预览<br>hexo d -g #生成并上传 </p></blockquote><h2 id="3-11-config-yml"><a href="#3-11-config-yml" class="headerlink" title="3.11 _config.yml"></a>3.11 _config.yml</h2><p>这里面都是一些全局配置，每个参数的意思都比较简单明了，所以就不作详细介绍了。</p><p>需要特别注意的地方是，冒号后面必须有一个空格，否则可能会出问题。</p><h2 id="3-12-写博客"><a href="#3-12-写博客" class="headerlink" title="3.12 写博客"></a>3.12 写博客</h2><p>定位到我们的hexo根目录，执行命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &#39;my-first-blog&#39;</span><br></pre></td></tr></table></figure><p>hexo会帮我们在<em>_posts</em>下生成相关md文件：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/g.png" alt="g.png"></p><p>我们只需要打开这个文件就可以开始写博客了，默认生成如下内容：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/h.png" alt="h.png"></p><p>当然你也可以直接自己新建md文件，用这个命令的好处是帮我们自动生成了时间。</p><p>一般完整格式如下：</p><blockquote><hr><hr><p>title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面<br>-–</p></blockquote><p> 以下是正文</p><p>那么<code>hexo new page &#39;postName&#39;</code>命令和<code>hexo new &#39;postName&#39;</code>有什么区别呢？</p><p><code>hexo new page &quot;my-second-blog&quot;</code></p><p>生成如下：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/i.png" alt="i.png"></p><p>最终部署时生成：<em>hexo\public\my-second-blog\index.html</em>，但是它不会作为文章出现在博文目录。</p><h3 id="3-12-1-写博客工具"><a href="#3-12-1-写博客工具" class="headerlink" title="3.12.1 写博客工具"></a>3.12.1 写博客工具</h3><p>Typora</p><h3 id="3-12-2-如何让博文列表不显示全部内容"><a href="#3-12-2-如何让博文列表不显示全部内容" class="headerlink" title="3.12.2 如何让博文列表不显示全部内容"></a>3.12.2 如何让博文列表不显示全部内容</h3><blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>使用<em>github pages</em>服务搭建博客的好处有：</p><ol><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li></ol><p>&lt;!–more–&gt;</p><ol start="4"><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li><li>等等； </li></ol></blockquote><p>最终效果：</p><p><img src="https://bugessgithubio-1259099613.cos.ap-chengdu.myqcloud.com/images/a/j.png" alt="j.png"></p><p><strong>原文链接</strong>：<em><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#搭建github博客" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan</a></em></p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客搭建 </tag>
            
            <tag> 技术 </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
